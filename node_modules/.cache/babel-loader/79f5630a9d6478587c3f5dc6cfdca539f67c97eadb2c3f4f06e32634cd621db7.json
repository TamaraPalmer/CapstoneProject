{"ast":null,"code":"var _jsxFileName = \"/Users/tamarapalmer/Desktop/CapstoneProject/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport axios from \"axios\";\nimport Typography from \"@mui/material/Typography\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport BrowseArtist from \"../components/BrowseArtist/BrowseArtist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\nexport default function Album() {\n  _s();\n  const [artists, setArtists] = React.useState([]);\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios.get(\"https://v1.nocodeapi.com/fyiah876/spotify/fHCqbcjtNZRlBCZl/playlists?id=5HlbFuuO9gZ3Y4coHUtsSO&si=7dbcfaa9160c4816\");\n      const mappedData = result.data.items.map(item => ({\n        id: item.id,\n        name: item.name,\n        images: item.images,\n        followers: item.followers\n      }));\n      setArtists(mappedData.slice(0, 6));\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      component: \"h2\",\n      variant: \"subtitle6\",\n      sx: {\n        fontWeight: \"bold\",\n        color: \"White\",\n        fontFamily: \"Arial\",\n        mb: 2\n      },\n      children: \"Here are favorite tracks, playlists and albums from Unsigned artist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"h1\",\n      variant: \"subtitle4\",\n      sx: {\n        fontWeight: \"bold\",\n        fontFamily: \"Merriweather\",\n        color: \"White\",\n        mb: 2\n      },\n      children: \"Top Playlist by Listen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BrowseArtist, {\n      artists: artists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Album, \"myO3VIklrIMVqFD52MxwExKe+k4=\");\n_c = Album;\nvar _c;\n$RefreshReg$(_c, \"Album\");","map":{"version":3,"names":["React","axios","Typography","createTheme","ThemeProvider","BrowseArtist","jsxDEV","_jsxDEV","theme","Album","_s","artists","setArtists","useState","useEffect","fetchData","result","get","mappedData","data","items","map","item","id","name","images","followers","slice","children","component","variant","sx","fontWeight","color","fontFamily","mb","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tamarapalmer/Desktop/CapstoneProject/src/pages/Dashboard.js"],"sourcesContent":["import * as React from \"react\";\nimport axios from \"axios\";\nimport Typography from \"@mui/material/Typography\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport BrowseArtist from \"../components/BrowseArtist/BrowseArtist\";\n\nconst theme = createTheme();\n\nexport default function Album() {\n  const [artists, setArtists] = React.useState([]);\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios.get(\n        \"https://v1.nocodeapi.com/fyiah876/spotify/fHCqbcjtNZRlBCZl/playlists?id=5HlbFuuO9gZ3Y4coHUtsSO&si=7dbcfaa9160c4816\"\n      );\n      const mappedData = result.data.items.map((item) => ({\n        id: item.id,\n        name: item.name,\n        images: item.images,\n        followers: item.followers,\n      }));\n      setArtists(mappedData.slice(0, 6));\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Typography\n        component=\"h2\"\n        variant=\"subtitle6\"\n        sx={{ fontWeight: \"bold\", color: \"White\", fontFamily: \"Arial\", mb: 2 }}\n      >\n        Here are favorite tracks, playlists and albums from Unsigned artist\n      </Typography>\n      <Typography\n        component=\"h1\"\n        variant=\"subtitle4\"\n        sx={{\n          fontWeight: \"bold\",\n          fontFamily: \"Merriweather\",\n          color: \"White\",\n          mb: 2,\n        }}\n      >\n        Top Playlist by Listen\n      </Typography>\n      <BrowseArtist artists={artists} />\n    </ThemeProvider>\n  );\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AACjE,OAAOC,YAAY,MAAM,yCAAyC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,KAAK,GAAGL,WAAW,EAAE;AAE3B,eAAe,SAASM,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,KAAK,CAACa,QAAQ,CAAC,EAAE,CAAC;EAEhDb,KAAK,CAACc,SAAS,CAAC,MAAM;IACpB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,MAAM,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAC5B,oHAAoH,CACrH;MACD,MAAMC,UAAU,GAAGF,MAAM,CAACG,IAAI,CAACC,KAAK,CAACC,GAAG,CAAEC,IAAI,KAAM;QAClDC,EAAE,EAAED,IAAI,CAACC,EAAE;QACXC,IAAI,EAAEF,IAAI,CAACE,IAAI;QACfC,MAAM,EAAEH,IAAI,CAACG,MAAM;QACnBC,SAAS,EAAEJ,IAAI,CAACI;MAClB,CAAC,CAAC,CAAC;MACHd,UAAU,CAACM,UAAU,CAACS,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACpC,CAAC;IACDZ,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA,CAACH,aAAa;IAACI,KAAK,EAAEA,KAAM;IAAAoB,QAAA,gBAC1BrB,OAAA,CAACL,UAAU;MACT2B,SAAS,EAAC,IAAI;MACdC,OAAO,EAAC,WAAW;MACnBC,EAAE,EAAE;QAAEC,UAAU,EAAE,MAAM;QAAEC,KAAK,EAAE,OAAO;QAAEC,UAAU,EAAE,OAAO;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAP,QAAA,EACxE;IAED;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAa,eACbhC,OAAA,CAACL,UAAU;MACT2B,SAAS,EAAC,IAAI;MACdC,OAAO,EAAC,WAAW;MACnBC,EAAE,EAAE;QACFC,UAAU,EAAE,MAAM;QAClBE,UAAU,EAAE,cAAc;QAC1BD,KAAK,EAAE,OAAO;QACdE,EAAE,EAAE;MACN,CAAE;MAAAP,QAAA,EACH;IAED;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAa,eACbhC,OAAA,CAACF,YAAY;MAACM,OAAO,EAAEA;IAAQ;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACpB;AAEpB;AAAC7B,EAAA,CA3CuBD,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}